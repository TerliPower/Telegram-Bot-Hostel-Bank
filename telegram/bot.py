from header import *
from func import *

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    PATH_TO_ACCOUNT = f'users/{message.from_user.username}'
    if message.text == '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç':
        user = SqlCommit('''SELECT * FROM users WHERE name = ?;''', (message.from_user.username,))
        if len(user) == 0:
            with open('announce', "r") as f:
                announce = f.read()

            RRCode = randint(100000, 999999)
            SqlCommit('''INSERT INTO users(name, code, ‚úÖ–†–∏–≤–∞–ª—ã, –•–æ—Å—Ç–µ–ª_–ö–æ–∏–Ω—ã) VALUES( ?, ?, ?, ? );''', (message.from_user.username, RRCode, 100, 100))
            user = SqlCommit('''SELECT * FROM users WHERE name = ?;''', (message.from_user.username,))
            info = user[0]
            a = ''
            b = ''
            if info[2] != None: a = 'RRID: ' + str(info[2]) + '\n'
            if info[4] != None: b = '–≠–º–∏—Ç–µ–Ω—Ç: ' + str(info[4]) + '\n\n'
            info = info[1] + '\n' + a + b

            accounts = []
            for curr in GetAllCurrencies():
                number = str(SqlCommit(f'SELECT {curr} FROM users WHERE name = ?;', (message.from_user.username,))[0][0])
                if number == 'None':
                    continue
                accounts.append(curr + ': ' + number)
            accounts = '\n'.join(accounts)

            MiniConstructor(message.from_user.id, announce + 'ü§µ' + info + '\n' +  accounts, '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        else:
            with open('announce', "r") as f:
                announce = f.read()

            user = SqlCommit('''SELECT * FROM users WHERE name = ?;''', (message.from_user.username,))
            info = user[0]
            a = ''
            b = ''
            if info[2] != None: a = 'RRID: ' + str(info[2]) + '\n'
            if info[4] != None: b = '–≠–º–∏—Ç–µ–Ω—Ç: ' + str(info[4]) + '\n\n'
            info = info[1] + '\n' + a + b

            accounts = []
            for curr in GetAllCurrencies():
                number = str(SqlCommit(f'SELECT {curr} FROM users WHERE name = ?;', (message.from_user.username,))[0][0])
                if number == 'None':
                    continue
                isdef = ''
                if curr[0] == 'üìÉ':
                    qisdef = SqlCommit(f'SELECT isdef FROM bonds WHERE name = ?;', (curr,))[0][0]
                    if qisdef == 1:
                        isdef = ' - –¥–µ—Ñ–æ–ª—Ç!'
                accounts.append(curr + ': ' + number + isdef)
            accounts = '\n'.join(accounts)

            MiniConstructor(message.from_user.id, announce + 'ü§µ' + info + '\n' + accounts, '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '/start':
        MiniConstructor(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å?', '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '–ë–∏—Ä–∂–∞', '–¢–æ–ø', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')

    elif message.text == '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        MenuConstructor(message.from_user.id, [0], TransmitMoney0, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–Ω—É—é –±—É–º–∞–≥—É', *tuple(GetAllCurrencies()), '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        if len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
            MiniConstructor(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –Ω—è', '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '–ë–∏—Ä–∂–∞', '–ë–∞–Ω–∫', '–¢–æ–ø', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        else:
            MiniConstructor(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –Ω—è', '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '–ë–∏—Ä–∂–∞', '–¢–æ–ø', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')

    elif message.text == '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        RRID = SqlCommit('SELECT rrid FROM users WHERE name = ?', (message.from_user.username,))[0][0]
        if RRID == None:
            rrcode = SqlCommit('SELECT code FROM users WHERE name = ?', (message.from_user.username,))[0][0]
            MiniConstructor(message.from_user.id, f'–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¢–µ–ª–µ–≥—Ä–∞–º –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É –†–∏–≤–∞–ª –†–µ–≥–∏–æ–Ω—Å. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, –ø—Ä–∏—Å–ª–∞–≤ –≤–∞—à –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ {rrcode} –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –±–∞–Ω–∫–∞: https://m.rivalregions.com/#messages/246989401 –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏, –Ω—è', '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        else:
            MiniConstructor(message.from_user.id, '–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π —Å—á–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –†–∏–≤–∞–ª–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –±–∞–Ω–∫–∞: https://m.rivalregions.com/#slide/donate/user/246989401 –∏ –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∞—à —Å—á–µ—Ç –∑–¥–µ—Å—å (–∑–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤—Ä—É—á–Ω—É—é)', '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        RRID = SqlCommit('SELECT rrid FROM users WHERE name = ?', (message.from_user.username,))[0][0]
        if RRID == None:
            rrcode = SqlCommit('SELECT code FROM users WHERE name = ?', (message.from_user.username,))[0][0]
            MiniConstructor(message.from_user.id, f'–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¢–µ–ª–µ–≥—Ä–∞–º –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É –†–∏–≤–∞–ª –†–µ–≥–∏–æ–Ω—Å. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, –ø—Ä–∏—Å–ª–∞–≤ –≤–∞—à –∫–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ {rrcode} —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –±–∞–Ω–∫–∞: https://m.rivalregions.com/#messages/246989401 –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞—è–≤–∫–∏, –Ω—è', '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        else:
            myorders = SqlCommit('SELECT * FROM orders WHERE name = ?', (message.from_user.username,))
            if len(myorders) != 0:
                poses = ''
                for pos in myorders:
                    for element in pos:
                        element = str(element)
                        poses += element + '   '
                    poses = poses[:-3]
                    poses += '\n'

                myorders = '–í–∞—à–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥:\n' + '---------------------------------------------\n' + poses + '=============================================='
                MenuConstructor(message.from_user.id, [0], OrderHandler1, myorders + '\n–ñ–µ–ª–∞–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –∏–ª–∏ –∂–µ–ª–∞–µ—Ç–µ —Å–Ω—è—Ç—å –∑–∞—è–≤–∫—É —Å –≤—ã–≤–æ–¥–∞?', '–í—ã–≤–µ—Å—Ç–∏', '–°–Ω—è—Ç—å –∑–∞—è–≤–∫—É')
            else:
                MenuConstructor(message.from_user.id, [0], OrderHandler, '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –∫ –≤—ã–≤–æ–¥—É —Å—É–º–º—É –†–∏–≤–∞–ª–æ–≤ –∏ –æ–∂–∏–¥–∞–π—Ç–µ –∏—Ö –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ –†–∏–≤–∞–ª –†–µ–≥–∏–æ–Ω—Å. –í—ã–≤–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é')

    elif message.text == '–ë–∏—Ä–∂–∞':
        rawpos = SqlCommit(f'SELECT * FROM exchange')
        poses = ''
        for pos in rawpos:
            for element in pos:
                element = str(element)
                poses += element + '   '
            poses = poses[:-3]
            poses += '\n'

        exchange = '‚Ññ      –ü—Ä–æ–¥–∞–µ—Ç      –ü–æ–ª—É—á–∞–µ—Ç–µ      –û—Ç–¥–∞–µ—Ç–µ      –†–µ–∑–µ—Ä–≤\n\n' + poses

        isaccexists = len(SqlCommit(f'SELECT name FROM users WHERE name = ?', (message.from_user.username,))) == 1
        if isaccexists == False:
            MiniConstructor(message.from_user.id, exchange, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            return 1

        a = 0
        for pos in rawpos:
            if pos[1] == message.from_user.username:
                a = 1
                break

        if a == 0:
            MiniConstructor(message.from_user.id, exchange, '–ö—É–ø–∏—Ç—å', '–í—ã—Å—Ç–∞–≤–∏—Ç—å', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            return 1
        MiniConstructor(message.from_user.id, exchange, '–ö—É–ø–∏—Ç—å', '–í—ã—Å—Ç–∞–≤–∏—Ç—å', '–°–Ω—è—Ç—å', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–í—ã—Å—Ç–∞–≤–∏—Ç—å' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        MenuConstructor(message.from_user.id, [0], ExchangeExhibit, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω–Ω—É—é –±—É–º–∞–≥—É', *tuple(GetAllCurrsUserHas(message.from_user.username)), '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–ö—É–ø–∏—Ç—å' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        MenuConstructor(message.from_user.id, [0], ExchangeBuy, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–°–Ω—è—Ç—å' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        MenuConstructor(message.from_user.id, [0], ReturnPos, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –ø–æ–∑–∏—Ü–∏–∏', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–ë–∞–Ω–∫' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        MiniConstructor(message.from_user.id, '–í—ã –≤ –±–∞–Ω–∫–µ, –Ω—è', '–≠–º–∏—Å—Å–∏—è –≤–∞–ª—é—Ç—ã!', '–ò–∑–¥–∞—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏—é', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–≠–º–∏—Å—Å–∏—è –≤–∞–ª—é—Ç—ã!' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        money = SqlCommit('SELECT –•–æ—Å—Ç–µ–ª_–ö–æ–∏–Ω—ã FROM users WHERE name = ? ;', (message.from_user.username,))[0][0]
        isemitent = SqlCommit('SELECT emitent FROM users WHERE name = ? ;', (message.from_user.username,))[0][0]
        print(isemitent)
        if isemitent != None:
            MenuConstructor(message.from_user.id, [message.from_user.username, isemitent], EmisCurr, f'–ò–∑–¥–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã {isemitent} –≤–∞–º –æ–±–æ–π–¥–µ—Ç—Å—è –≤ 1 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω –∑–∞ –∫–∞–∂–¥—É—é –±—É–º–∞–≥—É. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–¥–∞—Ç—å {money} –±—É–º–∞–≥\n\n–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            return 1
        if money < 11:
            MiniConstructor(message.from_user.id, '–î–ª—è –∏–∑–¥–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è 10 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω–æ–≤ + 1 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω –¥–ª—è –∏–∑–¥–∞–Ω–∏—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π –±—É–º–∞–≥–∏!', '–≠–º–∏—Å—Å–∏—è –≤–∞–ª—é—Ç—ã!', '–ò–∑–¥–∞—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏—é', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            return 1
        MenuConstructor(message.from_user.id, [0], CreateCurr, '–ò–∑–¥–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –≤–∞–º –æ–±–æ–π–¥–µ—Ç—Å—è –≤ 10 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω–æ–≤ + 1 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω –∑–∞ –∫–∞–∂–¥—É—é –±—É–º–∞–≥—É.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –≤–∞–ª—é—Ç—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        return 1

    elif message.text == '–ò–∑–¥–∞—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏—é' and len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        money = SqlCommit('SELECT –•–æ—Å—Ç–µ–ª_–ö–æ–∏–Ω—ã FROM users WHERE name = ? ;', (message.from_user.username,))[0][0]
        if money > 10:
            MenuConstructor(message.from_user.id, [0], CreateContract, '–û–±–ª–∏–≥–∞—Ü–∏—è –≤–∞–º –æ–±–æ–π–¥–µ—Ç—Å—è –≤ 10 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω–æ–≤ + 1 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω –∑–∞ –∫–∞–∂–¥—É—é –±—É–º–∞–≥—É.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –æ–±–ª–∏–≥–∞—Ü–∏–∏', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            return 1
        MiniConstructor(message.from_user.id, '–î–ª—è –∏–∑–¥–∞–Ω–∏—è –æ–±–ª–∏–≥–∞—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è 10 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω–æ–≤ + 1 –•–æ—Å—Ç–µ–ª-–ö–æ–∏–Ω –¥–ª—è –∏–∑–¥–∞–Ω–∏—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π –±—É–º–∞–≥–∏!', '–≠–º–∏—Å—Å–∏—è –≤–∞–ª—é—Ç—ã!', '–ò–∑–¥–∞—Ç—å –æ–±–ª–∏–≥–∞—Ü–∏—é', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        keyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text='–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É', url='t.me/TerliPower')
        keyboard.add(url_button)
        msg = bot.send_message(message.from_user.id, '–ù–µ –ø–æ—Ç–µ—Ä—è–π—Ç–µ—Å—å –≤–æ –≤—Å–µ—Ö —ç—Ç–∏—Ö –∫–Ω–æ–ø–∫–∞—Ö! –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É, —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å –æ –±–∞–≥–∞—Ö –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –±–æ—Ç—É', reply_markup = keyboard)

    elif message.text == '–¢–æ–ø':
        MiniConstructor(message.from_user.id, GetTop('–•–æ—Å—Ç–µ–ª_–ö–æ–∏–Ω—ã'), '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '–ë–∏—Ä–∂–∞', '–ë–∞–Ω–∫', '–¢–æ–ø', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')

    elif message.text == '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' and message.from_user.username == 'TerliPower':
        MenuConstructor(message.from_user.id, [0], AdminAdd, '–£–∫–∞–∂–∏—Ç–µ –≤–∞–ª—é—Ç—É', *tuple(GetAllCurrencies()), '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–£–∫–∞–∑–∞—Ç—å' and message.from_user.username == 'TerliPower':
        MenuConstructor(message.from_user.id, [0], AdminSet, '–£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    elif message.text == '–ê–Ω–æ–Ω—Å' and message.from_user.username == 'TerliPower':
        MenuConstructor(message.from_user.id, [0], SetAnnounce, '–ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–æ–Ω—Å', '–£–¥–∞–ª–∏—Ç—å', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

    #elif message.text == 'd':
    #    MiniConstructor(message.from_user.id, 'hehe', *tuple(GetDatesMonth()))
    #    return 1

    elif len(SqlCommit('SELECT * FROM users WHERE name = ?', (message.from_user.username,))) != 0:
        if IsCurrExists(0, message.text) and message.text[0] == 'üìÉ':
            emitent = SqlCommit('SELECT emitent FROM bonds WHERE name = ? ;', (message.text,))[0][0]
            if emitent == message.from_user.username:
                MenuConstructor(message.from_user.id, [message.text], EditBond, GetCurrDescription(message.text), '–ó–∞–¥–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            else:
                MiniConstructor(message.from_user.id, GetCurrDescription(message.text), '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', '–ë–∏—Ä–∂–∞', '–ë–∞–Ω–∫', '–¢–æ–ø', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
            return 1
        MiniConstructor(message.from_user.id, '–¢–∞–∫–æ–π –≤–∞–ª—é—Ç—ã –Ω–µ—Ç! –ö—É—Å—å!', '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', '–í–Ω–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–í—ã–≤–µ—Å—Ç–∏ –†–∏–≤–∞–ª—ã', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')

bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
